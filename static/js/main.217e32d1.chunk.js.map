{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","changeFilter","contactsActions","deleteContact","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","text","includes","getFiteredContacts","ContactForm","useState","setName","setNumber","nameInputId","numberInputId","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","find","contact","alert","className","s","form_label","htmlFor","form_input","type","onChange","pattern","title","required","addButton","ContactList","users","map","userInfo","removeContactButton","onClick","onDeleteContact","prototype","PropTypes","func","isRequired","Filter","filter_label","filter_input","target","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.217e32d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"ContactList_users__2vgj3\",\"removeContactButton\":\"ContactList_removeContactButton__2H-rQ\",\"userInfo\":\"ContactList_userInfo__untxi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_input\":\"Filter_filter_input__3HvKR\",\"filter_label\":\"Filter_filter_label__1eqb9\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst changeFilter = createAction('contacts/changeFilter');\nconst deleteContact = createAction('contacts/delete');\n\nconst contactsActions = { addContact, deleteContact, changeFilter };\nexport default contactsActions;","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const getFiteredContacts = contacts => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(text =>\n      text.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return getFiteredContacts(contacts);\n};","import React from 'react';\nimport { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/actions';\nimport { getContacts } from '../../redux/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is in contacts.`);\n      reset();\n      return;\n    }\n\n    dispatch(contactsActions.addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.form_label} htmlFor={nameInputId}>\n        Name\n        <input\n          className={s.form_input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.form_label} htmlFor={numberInputId}>\n        Number\n        <input\n          className={s.form_input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={s.addButton} type=\"submit\">\n        Add contacts\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/actions';\nimport { getVisibleContacts } from '../../redux/selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <ul className={s.users}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.userInfo} key={id}>\n          <p>\n            {name} : {number}\n          </p>\n          <button\n            className={s.removeContactButton}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.prototype = {\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport contactsActions from '../../redux/actions';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filter_label}>\n      Filter\n      <input\n        className={s.filter_input}\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"phonebookHeader\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"contactsHeader\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_input\":\"ContactForm_form_input__1TzmO\",\"form_label\":\"ContactForm_form_label__1nH0X\",\"addButton\":\"ContactForm_addButton__37_Qs\"};"],"sourceRoot":""}